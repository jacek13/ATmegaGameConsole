/*
 * ili9341.h
 *
 * Created: 06.10.2022 19:24:36
 *  Author: Michal Jackowski
 */ 

#ifndef ILI9341_H_
#define ILI9341_H_

#include <avr/io.h>
#include <util/delay.h>
#include <avr/pgmspace.h>
#include <avr/interrupt.h>

#include "../LcdDisplay/display.h"
#include "../common/bitManipulation.h"
#include "../common/config.h"

/** Commands */
#define ILI9341_NOP 0x00
#define ILI9341_RESET 0x01
#define ILI9341_READ_DISPLAY_IDENTIFICATION_STATUS 0x04
#define ILI9341_READ_DISPLAY_STATUS 0x09
#define ILI9341_READ_DISPLAY_POWER_MODE 0x0A
#define ILI9341_READ_DISPLAY_MADCTL 0x0B
#define ILI9341_READ_DISPLAY_PIXEL_FORMAT 0x0C
#define ILI9341_READ_DISPLAY_IMAGE_FORMAT 0x0D
#define ILI9341_READ_DISPLAY_SIGNAL_MODE 0x0E
#define ILI9341_READ_DISPLAY_SELF_DIAGNOSTIC_RESULT 0x0F
#define ILI9341_ENTER_SLEEP_MODE 0x10
#define ILI9341_SLEEP_OUT 0x11
#define ILI9341_PARTIAL_MODE_ON 0x12
#define ILI9341_NORMAL_DISPLAY_MODE 0x13
#define ILI9341_DISPLAY_INVERSION_OFF 0x20
#define ILI9341_DISPLAY_INVERSION_ON 0x21
#define ILI9341_GAMMA_SET 0x26
#define ILI9341_DISPLAY_OFF 0x28
#define ILI9341_DISPLAY_ON 0x29
#define ILI9341_COLUMN_ADDRESS_SET 0x2A
#define ILI9341_PAGE_ADDRESS_SET 0x2B
#define ILI9341_MEMORY_WRITE 0x2C
#define ILI9341_COLOR_SET 0x2D
#define ILI9341_MEMORY_READ 0x2E
#define ILI9341_PARTIAL_AREA 0x30
#define ILI9341_VERTICAL_SCROLLING_DEFINITION 0x33
#define ILI9341_TEARING_EFFECT_LINE_OFF 0x34
#define ILI9341_TEARING_EFFECT_LINE_ON 0x35
#define ILI9341_MEMORY_ACCESS_CONTROL 0x36
#define ILI9341_VERTICAL_SCROLLING_START_ADDRESS 0x37
#define ILI9341_IDLE_MODE_OFF 0x38
#define ILI9341_IDLE_MODE_ON 0x39
#define ILI9341_PIXEL_FORMAT_SET 0x3A
#define ILI9341_WRITE_MEMORY_CONTINUE 0x3C
#define ILI9341_READ_MEMORY_CONTINUE 0x3E
#define ILI9341_SET_TEAR_SCANLINE 0x44
#define ILI9341_GET_SCANLINE 0x45
#define ILI9341_WRITE_DISPLAY_BRITHNESS 0x51
#define ILI9341_READ_DISPLAY_BRITHNESS 0x52
#define ILI9341_WRITE_CTRL_DISPLAY 0x53
#define ILI9341_READ_CTRL_DISPLAY 0x54
#define ILI9341_WRITE_CONTENT_ADAPTIVE_BRITHNESS_CONTROL 0x55
#define ILI9341_READ_CONTENT_ADAPTIVE_BRITHNESS_CONTROL 0x56
#define ILI9341_WRITE_CABC_MINIMUM_BRITHNESS 0x5E
#define ILI9341_READ_CABC_MINIMUM_BRITHNESS 0x5F
#define ILI9341_READ_ID1 0xDA
#define ILI9341_READ_ID2 0xDB
#define ILI9341_READ_ID3 0xDC
#define ILI9341_RGB_INTERFACE_SINGAL_CONTROL 0xB0
#define ILI9341_FRAME_RATE_CONTROL_IN_NORMAL_MODE_FULL_COLORS 0xB1
#define ILI9341_FRAME_RATE_CONTROL_IN_IDLE_MODE_8_COLORS 0xB2
#define ILI9341_FRAME_RATE_CONTROL_IN_PARTIAL_MODE_FULL_COLORS 0xB3
#define ILI9341_DISPLAY_INVERSION_CONTROL 0xB4
#define ILI9341_BLANKING_PORCH_CONTROL 0xB5
#define ILI9341_DISPLAY_FUNCTION_CONTROL 0xB6
#define ILI9341_ENTRY_MODE_SET 0xB7
#define ILI9341_BACKLIGHT_CONTROL_1 0xB8
#define ILI9341_BACKLIGHT_CONTROL_2 0xB9
#define ILI9341_BACKLIGHT_CONTROL_3 0xBA
#define ILI9341_BACKLIGHT_CONTROL_4 0xBB
#define ILI9341_BACKLIGHT_CONTROL_5 0xBC
#define ILI9341_BACKLIGHT_CONTROL_7 0xBE
#define ILI9341_BACKLIGHT_CONTROL_8 0xBF
#define ILI9341_POWER_CONTROL_1 0xC0
#define ILI9341_POWER_CONTROL_2 0xC1
#define ILI9341_VCOM_CONTROL_1 0xC5
#define ILI9341_VCOM_CONTROL_2 0xC7
#define ILI9341_NV_MEMORY_WRITE 0xD0
#define ILI9341_NV_MEMORY_PROTECTION_KEY 0xD1
#define ILI9341_NV_MEMORY_STATUS_READ 0xD2
#define ILI9341_READ_ID4 0xD3
#define ILI9341_POSITIVE_GAMMA_CORRECTION 0xE0
#define ILI9341_NEGATIVE_GAMMA_CORRECTION 0xE1
#define ILI9341_DIGITAL_GAMMA_CONTROL_1 0xE2
#define ILI9341_DIGITAL_GAMMA_CONTROL_2 0xE3
#define ILI9341_INTERFACE_CONTROL 0xF6
#define ILI9341_POWER_CONTROL_A 0xCB
#define ILI9341_POWER_CONTROL_B 0xCF
#define ILI9341_DRIVER_TIMING_CONTROL_A 0xE8
#define ILI9341_DRIVER_TIMING_CONTROL_B 0xEA
#define ILI9341_POWER_ON_SEQUENCE_CONTROL 0xED
#define ILI9341_ENABLE_3G 0xF2
#define ILI9341_PUMP_RATIO_CONTROL 0xF7

void ILI9341_Reset();

void ILI9341_Write_Command(uint8_t command);

void ILI9341_Write_Command_With_Data_Word(uint8_t command, uint16_t data);

void ILI9341_Write_Data_Byte(uint8_t data);

void ILI9341_Write_Data_Word(uint16_t data);

void ILI9341_init(uint8_t brightness);

void ILI9341_Write_Word_Multiple_Times(uint16_t color, uint16_t num);

/** Sets cursor and after that, enables writing to gram*/
void ILI9341_Set_Cursor_Optimized(uint16_t xs, uint16_t ys, uint16_t xe, uint16_t ye);

void ILI9341_Set_Brihness(uint8_t brightness);

#endif /* ILI9341_H_ */